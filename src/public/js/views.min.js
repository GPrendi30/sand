//EJS Compiled Views - This file was automatically generated on Sun Dec 12 2021 18:04:13 GMT+0100 (Central European Standard Time)
ejs.views_include = function(locals) {
    console.log("views_include_setup",locals);
    return function(path, d) {
        console.log("ejs.views_include",path,d);
        return ejs["views_"+path.replace(/\//g,"_")]({...d,...locals}, null, ejs.views_include(locals));
    }
};
ejs.src_views_chat = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h2> Chat page placeholder </h2>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h2> Chat page placeholder </h2>\n")
    ; __line = 2
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_discover = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"discover\">\n  <!-- This setup can be expanded with more discover areas\n             Eg: hot, new, popular, for you, etc -->\n  <article class=\"discover_section\" id=\"general\">\n    <h1>Discover collections</h1>\n    <ul class=\"discover_lineup\">\n      <!-- TODO: Make card generation dynamic\n                     Eg: collections.forEach( include('discover_item')) -->\n\n        <% let collection = [{\"title\": \"Animal Pattern\" , \"img\" : \"/images/animal_pattern.jpg\" }, {\"title\": \"Abstract Art\" , \"img\" : \"/images/abstract_art.jpg\" },{\"title\": \"Dark\" , \"img\" : \"/images/dark_art.jpg\" }] %>\n        <% collection.forEach( item => { %>\n          <li class=\"discover_item grow_hover shadow\"><a href=\"/item/info\">\n              <img src=\"<%= item.img %>\" alt=\"<%= item.title %>\">\n              <h1><%= item.title %></h1>\n          </a></li>\n        <% }) %>\n\n    </ul>\n  </article>\n\n</section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"discover\">\n  <!-- This setup can be expanded with more discover areas\n             Eg: hot, new, popular, for you, etc -->\n  <article class=\"discover_section\" id=\"general\">\n    <h1>Discover collections</h1>\n    <ul class=\"discover_lineup\">\n      <!-- TODO: Make card generation dynamic\n                     Eg: collections.forEach( include('discover_item')) -->\n\n        ")
    ; __line = 10
    ;  let collection = [{"title": "Animal Pattern" , "img" : "/images/animal_pattern.jpg" }, {"title": "Abstract Art" , "img" : "/images/abstract_art.jpg" },{"title": "Dark" , "img" : "/images/dark_art.jpg" }] 
    ; __append("\n        ")
    ; __line = 11
    ;  collection.forEach( item => { 
    ; __append("\n          <li class=\"discover_item grow_hover shadow\"><a href=\"/item/info\">\n              <img src=\"")
    ; __line = 13
    ; __append(escapeFn( item.img ))
    ; __append("\" alt=\"")
    ; __append(escapeFn( item.title ))
    ; __append("\">\n              <h1>")
    ; __line = 14
    ; __append(escapeFn( item.title ))
    ; __append("</h1>\n          </a></li>\n        ")
    ; __line = 16
    ;  }) 
    ; __append("\n\n    </ul>\n  </article>\n\n</section>")
    ; __line = 21
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_error = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h1><%= message %></h1>\n<h2><%= error.status %></h2>\n<pre><%= error.stack %></pre>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h1>")
    ; __append(escapeFn( message ))
    ; __append("</h1>\n<h2>")
    ; __line = 2
    ; __append(escapeFn( error.status ))
    ; __append("</h2>\n<pre>")
    ; __line = 3
    ; __append(escapeFn( error.stack ))
    ; __append("</pre>\n")
    ; __line = 4
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_exchange = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h2> Exchange page placeholder </h2>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h2> Exchange page placeholder </h2>\n")
    ; __line = 2
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_follow = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<% let obj={\"title\": \"You wouldn't right click an NFT\" , \"img\" : \"/images/irony.jpg\" , \"value\" : 69420} %>\n    <section class=\"follow\">\n\n        <section id=\"top\">\n            <section id=\"info\">\n                <div>\n                    <h1>\n                        <%= obj.title %>\n                    </h1>\n                    <section id=\"desc\">\n                        <h2>Info:</h2>\n                        <p>This NFT is classified as '<%= obj.title %>' NFT Art.\n                                It's current value in the market is <%= obj.value %> CHF.\n                                    Market value expected to increase.</p>\n                    </section>\n                </div>\n            </section>\n            <section id=\"img\">\n                <div>\n                    <img src=\"<%= obj.img %>\" alt=\"<%= obj.title %>\">\n                </div>\n            </section>\n        </section>\n\n        <section id=\"buttons\">\n            <button class=\"grow_hover\">Add +</button>\n            <button class=\"grow_hover\">Track</button>\n            <button class=\"grow_hover\">Notify Me</button>\n        </section>\n    </section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ;  let obj={"title": "You wouldn't right click an NFT" , "img" : "/images/irony.jpg" , "value" : 69420} 
    ; __append("\n    <section class=\"follow\">\n\n        <section id=\"top\">\n            <section id=\"info\">\n                <div>\n                    <h1>\n                        ")
    ; __line = 8
    ; __append(escapeFn( obj.title ))
    ; __append("\n                    </h1>\n                    <section id=\"desc\">\n                        <h2>Info:</h2>\n                        <p>This NFT is classified as '")
    ; __line = 12
    ; __append(escapeFn( obj.title ))
    ; __append("' NFT Art.\n                                It's current value in the market is ")
    ; __line = 13
    ; __append(escapeFn( obj.value ))
    ; __append(" CHF.\n                                    Market value expected to increase.</p>\n                    </section>\n                </div>\n            </section>\n            <section id=\"img\">\n                <div>\n                    <img src=\"")
    ; __line = 20
    ; __append(escapeFn( obj.img ))
    ; __append("\" alt=\"")
    ; __append(escapeFn( obj.title ))
    ; __append("\">\n                </div>\n            </section>\n        </section>\n\n        <section id=\"buttons\">\n            <button class=\"grow_hover\">Add +</button>\n            <button class=\"grow_hover\">Track</button>\n            <button class=\"grow_hover\">Notify Me</button>\n        </section>\n    </section>")
    ; __line = 30
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_friendlist = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"friendlist\">\n\n      <section class=\"page\" id=\"your_friends\">\n          <h1>Your friends</h1>\n          <ul>\n              <% friends.forEach( friend => { %>\n                  <li class=\"friend\">\n                    <section class=\"shadow\" id=\"info\">\n                        <div id=\"avatar\"></div>\n                        <h1 id=\"name\"><%= friend.name %></h1>\n                        <p>Lorem ipsum dolor sit amet.</p>\n                    </section>\n                    <div id=\"buttons\">\n                        <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n                        <button class=\"grow_hover\" id=\"message\">Message</button>\n                        <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n                    </div>\n                </li>\n\n              <% }); %>\n          </ul>\n      </section>\n  \n      <section id=\"bookmarks\">\n          <% for(let i=0; i < 9; i++) { %>\n              <% let style = 'grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' %>\n              <div style=\"<%= style %>\" id=\"bm<%=i%>\" class=\"bookmark\"></div>\n          <% }; %>\n      </section>\n  \n  </section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"friendlist\">\n\n      <section class=\"page\" id=\"your_friends\">\n          <h1>Your friends</h1>\n          <ul>\n              ")
    ; __line = 6
    ;  friends.forEach( friend => { 
    ; __append("\n                  <li class=\"friend\">\n                    <section class=\"shadow\" id=\"info\">\n                        <div id=\"avatar\"></div>\n                        <h1 id=\"name\">")
    ; __line = 10
    ; __append(escapeFn( friend.name ))
    ; __append("</h1>\n                        <p>Lorem ipsum dolor sit amet.</p>\n                    </section>\n                    <div id=\"buttons\">\n                        <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n                        <button class=\"grow_hover\" id=\"message\">Message</button>\n                        <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n                    </div>\n                </li>\n\n              ")
    ; __line = 20
    ;  }); 
    ; __append("\n          </ul>\n      </section>\n  \n      <section id=\"bookmarks\">\n          ")
    ; __line = 25
    ;  for(let i=0; i < 9; i++) { 
    ; __append("\n              ")
    ; __line = 26
    ;  let style = 'grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' 
    ; __append("\n              <div style=\"")
    ; __line = 27
    ; __append(escapeFn( style ))
    ; __append("\" id=\"bm")
    ; __append(escapeFn(i))
    ; __append("\" class=\"bookmark\"></div>\n          ")
    ; __line = 28
    ;  }; 
    ; __append("\n      </section>\n  \n  </section>")
    ; __line = 31
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_graph = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<html>\n\n<head>\n    <meta name=\"author\" content=\"SAND\">\n</head>\n\n<body style=\"height: 100%; margin: 0\">\n    <!-- <main id=\"container\" style=\"height: 100%;\"> </main> -->\n    <main id=\"container2\" style=\"height: 100%;\"> </main>\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js\"></script>\n    <!-- Uncomment this line if you want to dataTool extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/extension/dataTool.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use gl extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to echarts-stat extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use map\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/china.js\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/world.js\"></script>\n        -->\n    <!-- Uncomment these two lines if you want to use bmap extension\n        <script type=\"text/javascript\" src=\"https://api.map.baidu.com/api?v=2.0&ak=<Your Key Here>\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@{{version}}/dist/extension/bmap.min.js\"></script>\n        -->\n    <script type=\"text/javascript\">\n        /* var dom = document.getElementById(\"container\");\n        var myChart = echarts.init(dom);\n        var app = {};\n\n        var option;\n\n\n\n        option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [150, 230, 224, 218, 135, 147, 260],\n                    type: 'line'\n                }\n            ]\n        };\n\n        if (option && typeof option === 'object') {\n            myChart.setOption(option);\n        }\n\n        let data = []\n\n        for (let i = 1; i < 30; i++) {\n            data.push(i);\n        } */\n\n        var dom2 = document.getElementById(\"container2\");\n        var barChart = echarts.init(dom2, 'dark');\n        var option2;\n        option2 = {\n            xAxis: {\n                type: 'category',\n                data: [\n                    0, 1, 2, 3, 4, 5, 6, 7, 8,\n                    9, 10, 11, 12, 13, 14, 15, 16, 17,\n                    18, 19, 20, 21, 22, 23, 24, 25, 26,\n                    27, 28, 29\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [\n                        172.71, 218.44909999999996,\n                        136.37775285714287, 71.3022,\n                        80.30675000000001, 87.64,\n                        239.87030000000001, 214.02100000000002,\n                        173.3443, 188.51900000000003,\n                        264.94106942069004, 499.59668999999997,\n                        306.88460000000003, 1124.4106000000006,\n                        439.71420000000006, 140.72549999999998,\n                        89.48, 133.2808,\n                        94.986, 114.3365,\n                        135.799, 206.94459999999998,\n                        156.48479999999998, 69.58,\n                        54.21000000000001, 107.80550000000001,\n                        98.0568, 180.95900000000006,\n                        139.58990000000003, 127.4852572380754\n                    ],\n                    type: 'bar',\n                    showBackground: true,\n                    backgroundStyle: {\n                        color: 'rgba(180, 180, 180, 0.2)'\n                    }\n                },\n\n                /* Option to also plot the line\n                \n                {\n                    data: [\n                    172.71, 218.44909999999996,\n                    136.37775285714287, 71.3022,\n                    80.30675000000001, 87.64,\n                    239.87030000000001, 214.02100000000002,\n                    173.3443, 188.51900000000003,\n                    264.94106942069004, 499.59668999999997,\n                    306.88460000000003, 1124.4106000000006,\n                    439.71420000000006, 140.72549999999998,\n                    89.48, 133.2808,\n                    94.986, 114.3365,\n                    135.799, 206.94459999999998,\n                    156.48479999999998, 69.58,\n                    54.21000000000001, 107.80550000000001,\n                    98.0568, 180.95900000000006,\n                    139.58990000000003, 127.4852572380754\n                ],\n                    type: 'line'\n                } */\n                \n            ]\n        };\n\n\n        if (option2 && typeof option2 === 'object') {\n            barChart.setOption(option2);\n        }\n\n    </script>\n</body>\n\n</html>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<html>\n\n<head>\n    <meta name=\"author\" content=\"SAND\">\n</head>\n\n<body style=\"height: 100%; margin: 0\">\n    <!-- <main id=\"container\" style=\"height: 100%;\"> </main> -->\n    <main id=\"container2\" style=\"height: 100%;\"> </main>\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js\"></script>\n    <!-- Uncomment this line if you want to dataTool extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/extension/dataTool.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use gl extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to echarts-stat extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use map\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/china.js\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/world.js\"></script>\n        -->\n    <!-- Uncomment these two lines if you want to use bmap extension\n        <script type=\"text/javascript\" src=\"https://api.map.baidu.com/api?v=2.0&ak=<Your Key Here>\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@{{version}}/dist/extension/bmap.min.js\"></script>\n        -->\n    <script type=\"text/javascript\">\n        /* var dom = document.getElementById(\"container\");\n        var myChart = echarts.init(dom);\n        var app = {};\n\n        var option;\n\n\n\n        option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [150, 230, 224, 218, 135, 147, 260],\n                    type: 'line'\n                }\n            ]\n        };\n\n        if (option && typeof option === 'object') {\n            myChart.setOption(option);\n        }\n\n        let data = []\n\n        for (let i = 1; i < 30; i++) {\n            data.push(i);\n        } */\n\n        var dom2 = document.getElementById(\"container2\");\n        var barChart = echarts.init(dom2, 'dark');\n        var option2;\n        option2 = {\n            xAxis: {\n                type: 'category',\n                data: [\n                    0, 1, 2, 3, 4, 5, 6, 7, 8,\n                    9, 10, 11, 12, 13, 14, 15, 16, 17,\n                    18, 19, 20, 21, 22, 23, 24, 25, 26,\n                    27, 28, 29\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [\n                        172.71, 218.44909999999996,\n                        136.37775285714287, 71.3022,\n                        80.30675000000001, 87.64,\n                        239.87030000000001, 214.02100000000002,\n                        173.3443, 188.51900000000003,\n                        264.94106942069004, 499.59668999999997,\n                        306.88460000000003, 1124.4106000000006,\n                        439.71420000000006, 140.72549999999998,\n                        89.48, 133.2808,\n                        94.986, 114.3365,\n                        135.799, 206.94459999999998,\n                        156.48479999999998, 69.58,\n                        54.21000000000001, 107.80550000000001,\n                        98.0568, 180.95900000000006,\n                        139.58990000000003, 127.4852572380754\n                    ],\n                    type: 'bar',\n                    showBackground: true,\n                    backgroundStyle: {\n                        color: 'rgba(180, 180, 180, 0.2)'\n                    }\n                },\n\n                /* Option to also plot the line\n                \n                {\n                    data: [\n                    172.71, 218.44909999999996,\n                    136.37775285714287, 71.3022,\n                    80.30675000000001, 87.64,\n                    239.87030000000001, 214.02100000000002,\n                    173.3443, 188.51900000000003,\n                    264.94106942069004, 499.59668999999997,\n                    306.88460000000003, 1124.4106000000006,\n                    439.71420000000006, 140.72549999999998,\n                    89.48, 133.2808,\n                    94.986, 114.3365,\n                    135.799, 206.94459999999998,\n                    156.48479999999998, 69.58,\n                    54.21000000000001, 107.80550000000001,\n                    98.0568, 180.95900000000006,\n                    139.58990000000003, 127.4852572380754\n                ],\n                    type: 'line'\n                } */\n                \n            ]\n        };\n\n\n        if (option2 && typeof option2 === 'object') {\n            barChart.setOption(option2);\n        }\n\n    </script>\n</body>\n\n</html>")
    ; __line = 139
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_header = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"title\">\n    <img id=\"logo\" src=\"images/sand.jpg\" alt=\"logo\">\n    <h1>S.A.N.D</h1>\n</section>\n\n<section id=\"buttons\">\n    <div id=\"darkmode\">\n        <label class=\"switch\">\n            <input type=\"checkbox\">\n            <span class=\"slider\"></span>\n        </label>\n    </div>\n\n    <div id=\"user_buttons\">\n        <section id=\"wallet\">\n            <div class=\"header-icon\" id=\"connected_indicator\"></div>\n            <button class=\"grow_hover header-icon\" id=\"wallet\"></button>\n        </section>\n        <button class=\"grow_hover header-icon\" id=\"user\"></button>\n    </div>\n\n</section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"title\">\n    <img id=\"logo\" src=\"images/sand.jpg\" alt=\"logo\">\n    <h1>S.A.N.D</h1>\n</section>\n\n<section id=\"buttons\">\n    <div id=\"darkmode\">\n        <label class=\"switch\">\n            <input type=\"checkbox\">\n            <span class=\"slider\"></span>\n        </label>\n    </div>\n\n    <div id=\"user_buttons\">\n        <section id=\"wallet\">\n            <div class=\"header-icon\" id=\"connected_indicator\"></div>\n            <button class=\"grow_hover header-icon\" id=\"wallet\"></button>\n        </section>\n        <button class=\"grow_hover header-icon\" id=\"user\"></button>\n    </div>\n\n</section>")
    ; __line = 22
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_aside_closed = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<aside>\n\n    <img class=\"aside_button\" src=\"/images/open_news.svg\">\n\n    <img class=\"aside_button\" src=\"/images/chat_button.svg\">\n\n</aside>\n\n\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<aside>\n\n    <img class=\"aside_button\" src=\"/images/open_news.svg\">\n\n    <img class=\"aside_button\" src=\"/images/chat_button.svg\">\n\n</aside>\n\n\n")
    ; __line = 10
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_footer = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<footer>\n    <img src=\"/images/nft.png\" alt=\"s.a.n.d logo\"  id='logo'>\n    <p class='copyright'>&copy; S.A.N.D Copyright.</p>\n    <a href=\"/terms\">Terms And Conditions.</a> \n    <a href=\"/privacy\">Privacy Policy</a>\n    </p>\n    <div class=\"social\">\n\n        <a href=\"facebook\"><img src=\"/images/facebook.png\" alt=\"facebook logo\"></a> \n        <a href=\"twitter\"><img src=\"/images/twitter.png\" alt=\"twitter logo\"></a> \n        <a href=\"instagram\"><img src=\"/images/instagram.png\" alt=\"instagram logo\"></a>\n    </div>\n</footer>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<footer>\n    <img src=\"/images/nft.png\" alt=\"s.a.n.d logo\"  id='logo'>\n    <p class='copyright'>&copy; S.A.N.D Copyright.</p>\n    <a href=\"/terms\">Terms And Conditions.</a> \n    <a href=\"/privacy\">Privacy Policy</a>\n    </p>\n    <div class=\"social\">\n\n        <a href=\"facebook\"><img src=\"/images/facebook.png\" alt=\"facebook logo\"></a> \n        <a href=\"twitter\"><img src=\"/images/twitter.png\" alt=\"twitter logo\"></a> \n        <a href=\"instagram\"><img src=\"/images/instagram.png\" alt=\"instagram logo\"></a>\n    </div>\n</footer>\n")
    ; __line = 14
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_head = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<head>\n    <title><%= title %></title>\n    <link rel='stylesheet' href='/stylesheets/style.css' />\n    <link rel='stylesheet' href='/stylesheets/header.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar.css' />\n    <link rel='stylesheet' href='/stylesheets/general.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar_min.css' />\n    <link rel='stylesheet' href='/stylesheets/discover.css' />\n    <link rel='stylesheet' href='/stylesheets/follow.css' />\n    <link rel='stylesheet' href='/stylesheets/friendlist.css' />\n    <link rel='stylesheet' href='/stylesheets/footer.css' />\n    <link rel='stylesheet' href='/stylesheets/aside.css' />\n    <link rel='stylesheet' href='/stylesheets/login_signup.css'  />\n</head>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<head>\n    <title>")
    ; __line = 2
    ; __append(escapeFn( title ))
    ; __append("</title>\n    <link rel='stylesheet' href='/stylesheets/style.css' />\n    <link rel='stylesheet' href='/stylesheets/header.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar.css' />\n    <link rel='stylesheet' href='/stylesheets/general.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar_min.css' />\n    <link rel='stylesheet' href='/stylesheets/discover.css' />\n    <link rel='stylesheet' href='/stylesheets/follow.css' />\n    <link rel='stylesheet' href='/stylesheets/friendlist.css' />\n    <link rel='stylesheet' href='/stylesheets/footer.css' />\n    <link rel='stylesheet' href='/stylesheets/aside.css' />\n    <link rel='stylesheet' href='/stylesheets/login_signup.css'  />\n</head>")
    ; __line = 14
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_navbar = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<% let pages=[\"home\", \"exchange\" , \"discover\" , \"follow\" , \"friendlist\" , \"rooms\" ]; %>\n\n    <div id=\"nav_buttons\">\n        <ul>\n            <% pages.forEach( p=> { %>\n                <li><a class=\"underline_animation\" href=\"/<%= p %>\">\n                        <div class=\"nav-icon\" id=\"<%= p %>\"></div>\n                        <h1>\n                            <% let title=p.charAt(0).toUpperCase() + p.slice(1); %>\n                                <%= title %>\n                        </h1>\n                    </a></li>\n                <% }); %>\n        </ul>\n\n        <section id=\"options\">\n            <button class=\"grow_hover nav-icon\" id=\"currency\"></button>\n            <button class=\"nav-icon grow_hover\" id=\"settings\"></button>\n            <button class=\"grow_hover nav-icon\" id=\"minmax\"></button>\n        </section>\n    </div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ;  let pages=["home", "exchange" , "discover" , "follow" , "friendlist" , "rooms" ]; 
    ; __append("\n\n    <div id=\"nav_buttons\">\n        <ul>\n            ")
    ; __line = 5
    ;  pages.forEach( p=> { 
    ; __append("\n                <li><a class=\"underline_animation\" href=\"/")
    ; __line = 6
    ; __append(escapeFn( p ))
    ; __append("\">\n                        <div class=\"nav-icon\" id=\"")
    ; __line = 7
    ; __append(escapeFn( p ))
    ; __append("\"></div>\n                        <h1>\n                            ")
    ; __line = 9
    ;  let title=p.charAt(0).toUpperCase() + p.slice(1); 
    ; __append("\n                                ")
    ; __line = 10
    ; __append(escapeFn( title ))
    ; __append("\n                        </h1>\n                    </a></li>\n                ")
    ; __line = 13
    ;  }); 
    ; __append("\n        </ul>\n\n        <section id=\"options\">\n            <button class=\"grow_hover nav-icon\" id=\"currency\"></button>\n            <button class=\"nav-icon grow_hover\" id=\"settings\"></button>\n            <button class=\"grow_hover nav-icon\" id=\"minmax\"></button>\n        </section>\n    </div>")
    ; __line = 21
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_index = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<!-- Uncomment (one at a time!) to test different main views-->\n<!-- TODO add dashboard here -->\n\n<section id=\"friendlist\">\n\n  <section class=\"page\" id=\"your_friends\">\n    <h1>Your friends</h1>\n    <ul>\n      <% friends.forEach( friend=> { %>\n        <li class=\"friend\">\n          <section class=\"shadow\" id=\"info\">\n            <div id=\"avatar\"></div>\n            <h1 id=\"name\">\n              <%= friend.name %>\n            </h1>\n            <p>Lorem ipsum dolor sit amet.</p>\n          </section>\n          <div id=\"buttons\">\n            <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n            <button class=\"grow_hover\" id=\"message\">Message</button>\n            <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n          </div>\n        </li>\n\n        <% }); %>\n    </ul>\n  </section>\n\n  <section id=\"bookmarks\">\n    <% for(let i=0; i < 9; i++) { %>\n      <% let style='grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' %>\n        <div style=\"<%= style %>\" id=\"bm<%=i%>\" class=\"bookmark\"></div>\n        <% }; %>\n  </section>\n\n</section>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<!-- Uncomment (one at a time!) to test different main views-->\n<!-- TODO add dashboard here -->\n\n<section id=\"friendlist\">\n\n  <section class=\"page\" id=\"your_friends\">\n    <h1>Your friends</h1>\n    <ul>\n      ")
    ; __line = 9
    ;  friends.forEach( friend=> { 
    ; __append("\n        <li class=\"friend\">\n          <section class=\"shadow\" id=\"info\">\n            <div id=\"avatar\"></div>\n            <h1 id=\"name\">\n              ")
    ; __line = 14
    ; __append(escapeFn( friend.name ))
    ; __append("\n            </h1>\n            <p>Lorem ipsum dolor sit amet.</p>\n          </section>\n          <div id=\"buttons\">\n            <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n            <button class=\"grow_hover\" id=\"message\">Message</button>\n            <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n          </div>\n        </li>\n\n        ")
    ; __line = 25
    ;  }); 
    ; __append("\n    </ul>\n  </section>\n\n  <section id=\"bookmarks\">\n    ")
    ; __line = 30
    ;  for(let i=0; i < 9; i++) { 
    ; __append("\n      ")
    ; __line = 31
    ;  let style='grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' 
    ; __append("\n        <div style=\"")
    ; __line = 32
    ; __append(escapeFn( style ))
    ; __append("\" id=\"bm")
    ; __append(escapeFn(i))
    ; __append("\" class=\"bookmark\"></div>\n        ")
    ; __line = 33
    ;  }; 
    ; __append("\n  </section>\n\n</section>\n")
    ; __line = 37
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_login = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<div class=\"form-container\">\n\n    <section id=\"title\">\n        <h1>Welcome back!</h1>\n        <h2>Log in to your account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" id=\"loginForm\" action=\"/login\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n        <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Don't have an account yet?</h3>\n        <form method=\"GET\" id=\"signupRedirect\" action=\"/signup\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n        </form>\n    </section>\n\n</div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<div class=\"form-container\">\n\n    <section id=\"title\">\n        <h1>Welcome back!</h1>\n        <h2>Log in to your account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" id=\"loginForm\" action=\"/login\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n        <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Don't have an account yet?</h3>\n        <form method=\"GET\" id=\"signupRedirect\" action=\"/signup\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n        </form>\n    </section>\n\n</div>")
    ; __line = 27
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_signup = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<div class=\"form-container\" id=\"signup\">\n\n    <section id=\"title\">\n        <h1>Sign up</h1>\n        <h2>Create a new account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" action=\"/signup\" id=\"signupForm\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n\n        <label for=\"name\">\n            <h3>Name</h3>\n            <input type=\"text\" name=\"name\" required>\n        </label>\n\n        <label for=\"surname\">\n            <h3>Surname</h3>\n            <input type=\"text\" name=\"surname\" required>\n        </label>\n\n        <label for=\"email\">\n            <h3>Email</h3>\n            <input type=\"email\" name=\"email\" required>\n        </label>\n\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n\n        <label for=\"retype_password\">\n            <h3>Retype Password</h3>\n            <input type=\"password\" name=\"retype_password\" required>\n        </label>\n\n        <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Already have an account?</h3>\n        <form method=\"GET\" id=\"loginRedirect\" action=\"/login\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n        </form>\n    </section>\n\n</div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<div class=\"form-container\" id=\"signup\">\n\n    <section id=\"title\">\n        <h1>Sign up</h1>\n        <h2>Create a new account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" action=\"/signup\" id=\"signupForm\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n\n        <label for=\"name\">\n            <h3>Name</h3>\n            <input type=\"text\" name=\"name\" required>\n        </label>\n\n        <label for=\"surname\">\n            <h3>Surname</h3>\n            <input type=\"text\" name=\"surname\" required>\n        </label>\n\n        <label for=\"email\">\n            <h3>Email</h3>\n            <input type=\"email\" name=\"email\" required>\n        </label>\n\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n\n        <label for=\"retype_password\">\n            <h3>Retype Password</h3>\n            <input type=\"password\" name=\"retype_password\" required>\n        </label>\n\n        <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Already have an account?</h3>\n        <form method=\"GET\" id=\"loginRedirect\" action=\"/login\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n        </form>\n    </section>\n\n</div>")
    ; __line = 49
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_user = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h2> User page placeholder </h2>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h2> User page placeholder </h2>\n")
    ; __line = 2
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_wip = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h1>Work In Progress</h1>\n<h2> Stay Tuned </h2>\n<h3> Coming Soon </h3>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h1>Work In Progress</h1>\n<h2> Stay Tuned </h2>\n<h3> Coming Soon </h3>")
    ; __line = 3
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}