ejs.views_include = function(locals) {
    console.log("views_include_setup",locals);
    return function(path, d) {
        console.log("ejs.views_include",path,d);
        return ejs["views_"+path.replace(/\//g,"_")]({...d,...locals}, null, ejs.views_include(locals));
    }
};
ejs.src_views_chat = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h2> Chat page placeholder </h2>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h2> Chat page placeholder </h2>\n")
    ; __line = 2
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_discover = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"discover\">\n  <!-- This setup can be expanded with more discover areas\n             Eg: hot, new, popular, for you, etc -->\n  <article class=\"discover_section\" id=\"general\">\n    <h1>Discover collections</h1>\n    <ul class=\"discover_lineup\">\n      <!-- TODO: Make card generation dynamic\n                     Eg: collections.forEach( include('discover_item')) -->\n\n        <!-- <% let collection = [{\"title\": \"Animal Pattern\" , \"img\" : \"/images/animal_pattern.jpg\" }, {\"title\": \"Abstract Art\" , \"img\" : \"/images/abstract_art.jpg\" },{\"title\": \"Dark\" , \"img\" : \"/images/dark_art.jpg\" }] %> -->\n        <% data.forEach( item => { %>\n          <li class=\"discover_item grow_hover shadow\"><a href=\"<%= item.link %>\">\n              <img src=\"<%= item.img %>\" alt=\"<%= item.title %>\">\n              <h1><%= item.title %></h1>\n          </a></li>\n        <% }) %>\n\n    </ul>\n  </article>\n\n</section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"discover\">\n  <!-- This setup can be expanded with more discover areas\n             Eg: hot, new, popular, for you, etc -->\n  <article class=\"discover_section\" id=\"general\">\n    <h1>Discover collections</h1>\n    <ul class=\"discover_lineup\">\n      <!-- TODO: Make card generation dynamic\n                     Eg: collections.forEach( include('discover_item')) -->\n\n        <!-- ")
    ; __line = 10
    ;  let collection = [{"title": "Animal Pattern" , "img" : "/images/animal_pattern.jpg" }, {"title": "Abstract Art" , "img" : "/images/abstract_art.jpg" },{"title": "Dark" , "img" : "/images/dark_art.jpg" }] 
    ; __append(" -->\n        ")
    ; __line = 11
    ;  data.forEach( item => { 
    ; __append("\n          <li class=\"discover_item grow_hover shadow\"><a href=\"")
    ; __line = 12
    ; __append(escapeFn( item.link ))
    ; __append("\">\n              <img src=\"")
    ; __line = 13
    ; __append(escapeFn( item.img ))
    ; __append("\" alt=\"")
    ; __append(escapeFn( item.title ))
    ; __append("\">\n              <h1>")
    ; __line = 14
    ; __append(escapeFn( item.title ))
    ; __append("</h1>\n          </a></li>\n        ")
    ; __line = 16
    ;  }) 
    ; __append("\n\n    </ul>\n  </article>\n\n</section>")
    ; __line = 21
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_error = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h1><%= message %></h1>\n<h2><%= error.status %></h2>\n<pre><%= error.stack %></pre>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h1>")
    ; __append(escapeFn( message ))
    ; __append("</h1>\n<h2>")
    ; __line = 2
    ; __append(escapeFn( error.status ))
    ; __append("</h2>\n<pre>")
    ; __line = 3
    ; __append(escapeFn( error.stack ))
    ; __append("</pre>\n")
    ; __line = 4
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_exchange = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h2> Exchange page placeholder </h2>\n<section class=\"assets\">\n    <section class=\"Currency\">\n        <h1> <%= amount1 %> <%= currency1 %> = <%= amount2 %> <%= currency2 %> </h1>\n        <section class=\"price_graph\"> Insert Graph <section>\n    </section>\n\n</section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h2> Exchange page placeholder </h2>\n<section class=\"assets\">\n    <section class=\"Currency\">\n        <h1> ")
    ; __line = 4
    ; __append(escapeFn( amount1 ))
    ; __append(" ")
    ; __append(escapeFn( currency1 ))
    ; __append(" = ")
    ; __append(escapeFn( amount2 ))
    ; __append(" ")
    ; __append(escapeFn( currency2 ))
    ; __append(" </h1>\n        <section class=\"price_graph\"> Insert Graph <section>\n    </section>\n\n</section>")
    ; __line = 8
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_follow = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<% let obj={\"title\": \"You wouldn't right click an NFT\" , \"img\" : \"/images/irony.jpg\" , \"value\" : 69420} %>\n    <section class=\"follow\">\n\n        <section id=\"top\">\n            <section id=\"info\">\n                <div>\n                    <h1>\n                        <%= obj.title %>\n                    </h1>\n                    <section id=\"desc\">\n                        <h2>Info:</h2>\n                        <p>This NFT is classified as '<%= obj.title %>' NFT Art.\n                                It's current value in the market is <%= obj.value %> CHF.\n                                    Market value expected to increase.</p>\n                    </section>\n                </div>\n            </section>\n            <section id=\"img\">\n                <div>\n                    <img src=\"<%= obj.img %>\" alt=\"<%= obj.title %>\">\n                </div>\n            </section>\n        </section>\n\n        <section id=\"buttons\">\n            <button class=\"grow_hover\">Add +</button>\n            <button class=\"grow_hover\">Track</button>\n            <button class=\"grow_hover\">Notify Me</button>\n        </section>\n    </section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ;  let obj={"title": "You wouldn't right click an NFT" , "img" : "/images/irony.jpg" , "value" : 69420} 
    ; __append("\n    <section class=\"follow\">\n\n        <section id=\"top\">\n            <section id=\"info\">\n                <div>\n                    <h1>\n                        ")
    ; __line = 8
    ; __append(escapeFn( obj.title ))
    ; __append("\n                    </h1>\n                    <section id=\"desc\">\n                        <h2>Info:</h2>\n                        <p>This NFT is classified as '")
    ; __line = 12
    ; __append(escapeFn( obj.title ))
    ; __append("' NFT Art.\n                                It's current value in the market is ")
    ; __line = 13
    ; __append(escapeFn( obj.value ))
    ; __append(" CHF.\n                                    Market value expected to increase.</p>\n                    </section>\n                </div>\n            </section>\n            <section id=\"img\">\n                <div>\n                    <img src=\"")
    ; __line = 20
    ; __append(escapeFn( obj.img ))
    ; __append("\" alt=\"")
    ; __append(escapeFn( obj.title ))
    ; __append("\">\n                </div>\n            </section>\n        </section>\n\n        <section id=\"buttons\">\n            <button class=\"grow_hover\">Add +</button>\n            <button class=\"grow_hover\">Track</button>\n            <button class=\"grow_hover\">Notify Me</button>\n        </section>\n    </section>")
    ; __line = 30
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_friendlist = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"friendlist\">\n\n      <section class=\"page\" id=\"your_friends\">\n          <h1>Your friends</h1>\n          <ul>\n              <% friends.forEach( friend => { %>\n                  <li class=\"friend\">\n                    <section class=\"shadow\" id=\"info\">\n                        <div id=\"avatar\"></div>\n                        <h1 id=\"name\"><%= friend.name %></h1>\n                        <p>Lorem ipsum dolor sit amet.</p>\n                    </section>\n                    <div id=\"buttons\">\n                        <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n                        <button class=\"grow_hover\" id=\"message\">Message</button>\n                        <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n                    </div>\n                </li>\n\n              <% }); %>\n          </ul>\n      </section>\n  \n      <section id=\"bookmarks\">\n          <% for(let i=0; i < 9; i++) { %>\n              <% let style = 'grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' %>\n              <div style=\"<%= style %>\" id=\"bm<%=i%>\" class=\"bookmark\"></div>\n          <% }; %>\n      </section>\n  \n  </section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"friendlist\">\n\n      <section class=\"page\" id=\"your_friends\">\n          <h1>Your friends</h1>\n          <ul>\n              ")
    ; __line = 6
    ;  friends.forEach( friend => { 
    ; __append("\n                  <li class=\"friend\">\n                    <section class=\"shadow\" id=\"info\">\n                        <div id=\"avatar\"></div>\n                        <h1 id=\"name\">")
    ; __line = 10
    ; __append(escapeFn( friend.name ))
    ; __append("</h1>\n                        <p>Lorem ipsum dolor sit amet.</p>\n                    </section>\n                    <div id=\"buttons\">\n                        <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n                        <button class=\"grow_hover\" id=\"message\">Message</button>\n                        <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n                    </div>\n                </li>\n\n              ")
    ; __line = 20
    ;  }); 
    ; __append("\n          </ul>\n      </section>\n  \n      <section id=\"bookmarks\">\n          ")
    ; __line = 25
    ;  for(let i=0; i < 9; i++) { 
    ; __append("\n              ")
    ; __line = 26
    ;  let style = 'grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' 
    ; __append("\n              <div style=\"")
    ; __line = 27
    ; __append(escapeFn( style ))
    ; __append("\" id=\"bm")
    ; __append(escapeFn(i))
    ; __append("\" class=\"bookmark\"></div>\n          ")
    ; __line = 28
    ;  }; 
    ; __append("\n      </section>\n  \n  </section>")
    ; __line = 31
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_graph = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<html>\n\n<head>\n    <meta name=\"author\" content=\"SAND\">\n</head>\n\n<body style=\"height: 100%; margin: 0\">\n    <!-- <main id=\"container\" style=\"height: 100%;\"> </main> -->\n    <main id=\"container2\" style=\"height: 100%;\"> </main>\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js\"></script>\n    <!-- Uncomment this line if you want to dataTool extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/extension/dataTool.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use gl extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to echarts-stat extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use map\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/china.js\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/world.js\"></script>\n        -->\n    <!-- Uncomment these two lines if you want to use bmap extension\n        <script type=\"text/javascript\" src=\"https://api.map.baidu.com/api?v=2.0&ak=<Your Key Here>\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@{{version}}/dist/extension/bmap.min.js\"></script>\n        -->\n    <script type=\"text/javascript\">\n        /* var dom = document.getElementById(\"container\");\n        var myChart = echarts.init(dom);\n        var app = {};\n\n        var option;\n\n\n\n        option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [150, 230, 224, 218, 135, 147, 260],\n                    type: 'line'\n                }\n            ]\n        };\n\n        if (option && typeof option === 'object') {\n            myChart.setOption(option);\n        }\n\n        let data = []\n\n        for (let i = 1; i < 30; i++) {\n            data.push(i);\n        } */\n\n        var dom2 = document.getElementById(\"container2\");\n        var barChart = echarts.init(dom2, 'dark');\n        var option2;\n        option2 = {\n            xAxis: {\n                type: 'category',\n                data: [\n                    0, 1, 2, 3, 4, 5, 6, 7, 8,\n                    9, 10, 11, 12, 13, 14, 15, 16, 17,\n                    18, 19, 20, 21, 22, 23, 24, 25, 26,\n                    27, 28, 29\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [\n                        172.71, 218.44909999999996,\n                        136.37775285714287, 71.3022,\n                        80.30675000000001, 87.64,\n                        239.87030000000001, 214.02100000000002,\n                        173.3443, 188.51900000000003,\n                        264.94106942069004, 499.59668999999997,\n                        306.88460000000003, 1124.4106000000006,\n                        439.71420000000006, 140.72549999999998,\n                        89.48, 133.2808,\n                        94.986, 114.3365,\n                        135.799, 206.94459999999998,\n                        156.48479999999998, 69.58,\n                        54.21000000000001, 107.80550000000001,\n                        98.0568, 180.95900000000006,\n                        139.58990000000003, 127.4852572380754\n                    ],\n                    type: 'bar',\n                    showBackground: true,\n                    backgroundStyle: {\n                        color: 'rgba(180, 180, 180, 0.2)'\n                    }\n                },\n\n                /* Option to also plot the line\n                \n                {\n                    data: [\n                    172.71, 218.44909999999996,\n                    136.37775285714287, 71.3022,\n                    80.30675000000001, 87.64,\n                    239.87030000000001, 214.02100000000002,\n                    173.3443, 188.51900000000003,\n                    264.94106942069004, 499.59668999999997,\n                    306.88460000000003, 1124.4106000000006,\n                    439.71420000000006, 140.72549999999998,\n                    89.48, 133.2808,\n                    94.986, 114.3365,\n                    135.799, 206.94459999999998,\n                    156.48479999999998, 69.58,\n                    54.21000000000001, 107.80550000000001,\n                    98.0568, 180.95900000000006,\n                    139.58990000000003, 127.4852572380754\n                ],\n                    type: 'line'\n                } */\n                \n            ]\n        };\n\n\n        if (option2 && typeof option2 === 'object') {\n            barChart.setOption(option2);\n        }\n\n    </script>\n</body>\n\n</html>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<html>\n\n<head>\n    <meta name=\"author\" content=\"SAND\">\n</head>\n\n<body style=\"height: 100%; margin: 0\">\n    <!-- <main id=\"container\" style=\"height: 100%;\"> </main> -->\n    <main id=\"container2\" style=\"height: 100%;\"> </main>\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js\"></script>\n    <!-- Uncomment this line if you want to dataTool extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/extension/dataTool.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use gl extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to echarts-stat extension\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js\"></script>\n        -->\n    <!-- Uncomment this line if you want to use map\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/china.js\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/map/js/world.js\"></script>\n        -->\n    <!-- Uncomment these two lines if you want to use bmap extension\n        <script type=\"text/javascript\" src=\"https://api.map.baidu.com/api?v=2.0&ak=<Your Key Here>\"></script>\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@{{version}}/dist/extension/bmap.min.js\"></script>\n        -->\n    <script type=\"text/javascript\">\n        /* var dom = document.getElementById(\"container\");\n        var myChart = echarts.init(dom);\n        var app = {};\n\n        var option;\n\n\n\n        option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [150, 230, 224, 218, 135, 147, 260],\n                    type: 'line'\n                }\n            ]\n        };\n\n        if (option && typeof option === 'object') {\n            myChart.setOption(option);\n        }\n\n        let data = []\n\n        for (let i = 1; i < 30; i++) {\n            data.push(i);\n        } */\n\n        var dom2 = document.getElementById(\"container2\");\n        var barChart = echarts.init(dom2, 'dark');\n        var option2;\n        option2 = {\n            xAxis: {\n                type: 'category',\n                data: [\n                    0, 1, 2, 3, 4, 5, 6, 7, 8,\n                    9, 10, 11, 12, 13, 14, 15, 16, 17,\n                    18, 19, 20, 21, 22, 23, 24, 25, 26,\n                    27, 28, 29\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [\n                        172.71, 218.44909999999996,\n                        136.37775285714287, 71.3022,\n                        80.30675000000001, 87.64,\n                        239.87030000000001, 214.02100000000002,\n                        173.3443, 188.51900000000003,\n                        264.94106942069004, 499.59668999999997,\n                        306.88460000000003, 1124.4106000000006,\n                        439.71420000000006, 140.72549999999998,\n                        89.48, 133.2808,\n                        94.986, 114.3365,\n                        135.799, 206.94459999999998,\n                        156.48479999999998, 69.58,\n                        54.21000000000001, 107.80550000000001,\n                        98.0568, 180.95900000000006,\n                        139.58990000000003, 127.4852572380754\n                    ],\n                    type: 'bar',\n                    showBackground: true,\n                    backgroundStyle: {\n                        color: 'rgba(180, 180, 180, 0.2)'\n                    }\n                },\n\n                /* Option to also plot the line\n                \n                {\n                    data: [\n                    172.71, 218.44909999999996,\n                    136.37775285714287, 71.3022,\n                    80.30675000000001, 87.64,\n                    239.87030000000001, 214.02100000000002,\n                    173.3443, 188.51900000000003,\n                    264.94106942069004, 499.59668999999997,\n                    306.88460000000003, 1124.4106000000006,\n                    439.71420000000006, 140.72549999999998,\n                    89.48, 133.2808,\n                    94.986, 114.3365,\n                    135.799, 206.94459999999998,\n                    156.48479999999998, 69.58,\n                    54.21000000000001, 107.80550000000001,\n                    98.0568, 180.95900000000006,\n                    139.58990000000003, 127.4852572380754\n                ],\n                    type: 'line'\n                } */\n                \n            ]\n        };\n\n\n        if (option2 && typeof option2 === 'object') {\n            barChart.setOption(option2);\n        }\n\n    </script>\n</body>\n\n</html>")
    ; __line = 139
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_header = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"title\">\n    <img id=\"logo\" src=\"images/sand.jpg\" alt=\"logo\">\n    <h1>S.A.N.D</h1>\n</section>\n\n<section id=\"buttons\">\n    <div id=\"darkmode\">\n        <label class=\"switch\">\n            <input type=\"checkbox\">\n            <span class=\"slider\"></span>\n        </label>\n    </div>\n\n    <div id=\"user_buttons\">\n        <section id=\"wallet\">\n            <div class=\"header-icon\" id=\"connected_indicator\"></div>\n            <button class=\"grow_hover header-icon\" id=\"wallet\"></button>\n        </section>\n        <button class=\"grow_hover header-icon\" id=\"user\"></button>\n    </div>\n\n</section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"title\">\n    <img id=\"logo\" src=\"images/sand.jpg\" alt=\"logo\">\n    <h1>S.A.N.D</h1>\n</section>\n\n<section id=\"buttons\">\n    <div id=\"darkmode\">\n        <label class=\"switch\">\n            <input type=\"checkbox\">\n            <span class=\"slider\"></span>\n        </label>\n    </div>\n\n    <div id=\"user_buttons\">\n        <section id=\"wallet\">\n            <div class=\"header-icon\" id=\"connected_indicator\"></div>\n            <button class=\"grow_hover header-icon\" id=\"wallet\"></button>\n        </section>\n        <button class=\"grow_hover header-icon\" id=\"user\"></button>\n    </div>\n\n</section>")
    ; __line = 22
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_aside_closed = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<aside>\n\n    <img class=\"aside_button\" src=\"/images/open_news.svg\">\n\n    <img class=\"aside_button\" src=\"/images/chat_button.svg\">\n\n</aside>\n\n\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<aside>\n\n    <img class=\"aside_button\" src=\"/images/open_news.svg\">\n\n    <img class=\"aside_button\" src=\"/images/chat_button.svg\">\n\n</aside>\n\n\n")
    ; __line = 10
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_footer = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<footer>\n    <img src=\"/images/nft.png\" alt=\"s.a.n.d logo\"  id='logo'>\n    <p class='copyright'>&copy; S.A.N.D Copyright.</p>\n    <a href=\"/terms\">Terms And Conditions.</a> \n    <a href=\"/privacy\">Privacy Policy</a>\n    </p>\n    <div class=\"social\">\n\n        <a href=\"facebook\"><img src=\"/images/facebook.png\" alt=\"facebook logo\"></a> \n        <a href=\"twitter\"><img src=\"/images/twitter.png\" alt=\"twitter logo\"></a> \n        <a href=\"instagram\"><img src=\"/images/instagram.png\" alt=\"instagram logo\"></a>\n    </div>\n</footer>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<footer>\n    <img src=\"/images/nft.png\" alt=\"s.a.n.d logo\"  id='logo'>\n    <p class='copyright'>&copy; S.A.N.D Copyright.</p>\n    <a href=\"/terms\">Terms And Conditions.</a> \n    <a href=\"/privacy\">Privacy Policy</a>\n    </p>\n    <div class=\"social\">\n\n        <a href=\"facebook\"><img src=\"/images/facebook.png\" alt=\"facebook logo\"></a> \n        <a href=\"twitter\"><img src=\"/images/twitter.png\" alt=\"twitter logo\"></a> \n        <a href=\"instagram\"><img src=\"/images/instagram.png\" alt=\"instagram logo\"></a>\n    </div>\n</footer>\n")
    ; __line = 14
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_head = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<head>\n    <title><%= title %></title>\n    <link rel='stylesheet' href='/stylesheets/style.css' />\n    <link rel='stylesheet' href='/stylesheets/header.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar.css' />\n    <link rel='stylesheet' href='/stylesheets/general.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar_min.css' />\n    <link rel='stylesheet' href='/stylesheets/discover.css' />\n    <link rel='stylesheet' href='/stylesheets/follow.css' />\n    <link rel='stylesheet' href='/stylesheets/friendlist.css' />\n    <link rel='stylesheet' href='/stylesheets/footer.css' />\n    <link rel='stylesheet' href='/stylesheets/aside.css' />\n    <link rel='stylesheet' href='/stylesheets/login_signup.css'  />\n    <link rel='stylesheet' href='/stylesheets/profile.css'  />\n</head>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<head>\n    <title>")
    ; __line = 2
    ; __append(escapeFn( title ))
    ; __append("</title>\n    <link rel='stylesheet' href='/stylesheets/style.css' />\n    <link rel='stylesheet' href='/stylesheets/header.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar.css' />\n    <link rel='stylesheet' href='/stylesheets/general.css' />\n    <link rel='stylesheet' href='/stylesheets/navbar_min.css' />\n    <link rel='stylesheet' href='/stylesheets/discover.css' />\n    <link rel='stylesheet' href='/stylesheets/follow.css' />\n    <link rel='stylesheet' href='/stylesheets/friendlist.css' />\n    <link rel='stylesheet' href='/stylesheets/footer.css' />\n    <link rel='stylesheet' href='/stylesheets/aside.css' />\n    <link rel='stylesheet' href='/stylesheets/login_signup.css'  />\n    <link rel='stylesheet' href='/stylesheets/profile.css'  />\n</head>")
    ; __line = 15
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_navbar = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<% let pages=[\"home\", \"exchange\" , \"discover\" , \"follow\" , \"friendlist\" , \"rooms\" ]; %>\n\n    <div id=\"nav_buttons\">\n        <ul>\n            <% pages.forEach( p=> { %>\n                <li><a class=\"underline_animation\" href=\"/<%= p %>\">\n                        <div class=\"nav-icon\" id=\"<%= p %>\"></div>\n                        <h1>\n                            <% let title=p.charAt(0).toUpperCase() + p.slice(1); %>\n                                <%= title %>\n                        </h1>\n                    </a></li>\n                <% }); %>\n        </ul>\n\n        <section id=\"options\">\n            <button class=\"grow_hover nav-icon\" id=\"currency\"></button>\n            <button class=\"nav-icon grow_hover\" id=\"settings\"></button>\n            <button class=\"grow_hover nav-icon\" id=\"minmax\"></button>\n        </section>\n    </div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ;  let pages=["home", "exchange" , "discover" , "follow" , "friendlist" , "rooms" ]; 
    ; __append("\n\n    <div id=\"nav_buttons\">\n        <ul>\n            ")
    ; __line = 5
    ;  pages.forEach( p=> { 
    ; __append("\n                <li><a class=\"underline_animation\" href=\"/")
    ; __line = 6
    ; __append(escapeFn( p ))
    ; __append("\">\n                        <div class=\"nav-icon\" id=\"")
    ; __line = 7
    ; __append(escapeFn( p ))
    ; __append("\"></div>\n                        <h1>\n                            ")
    ; __line = 9
    ;  let title=p.charAt(0).toUpperCase() + p.slice(1); 
    ; __append("\n                                ")
    ; __line = 10
    ; __append(escapeFn( title ))
    ; __append("\n                        </h1>\n                    </a></li>\n                ")
    ; __line = 13
    ;  }); 
    ; __append("\n        </ul>\n\n        <section id=\"options\">\n            <button class=\"grow_hover nav-icon\" id=\"currency\"></button>\n            <button class=\"nav-icon grow_hover\" id=\"settings\"></button>\n            <button class=\"grow_hover nav-icon\" id=\"minmax\"></button>\n        </section>\n    </div>")
    ; __line = 21
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_room_member = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<li class=\"room_member <%= user.role %> \">\n    <img src=\"images/user1.png\" alt=\"<%= user.username %>\">\n    <h1 id=\"username\"> <%= user.username %> </h1>\n</li>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<li class=\"room_member ")
    ; __append(escapeFn( user.role ))
    ; __append(" \">\n    <img src=\"images/user1.png\" alt=\"")
    ; __line = 2
    ; __append(escapeFn( user.username ))
    ; __append("\">\n    <h1 id=\"username\"> ")
    ; __line = 3
    ; __append(escapeFn( user.username ))
    ; __append(" </h1>\n</li>")
    ; __line = 4
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_includes_room_msg = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<!-- Messages sent by current user have an additional class -->\n<!-- For testing purposes, assume current user is user3-->\n<% if (msg.user.id === 'user3') { %>\n    <% if (msg.user.id === prev) { %> \n        <section class=\"message stream mine\">\n    <% } else { %>\n        <section class=\"message mine\">\n        <% prev = msg.user.id %>\n    <% } %>\n<% } else { %>\n    <% if (msg.user.id === prev) { %> \n        <section class=\"message stream\">\n    <% } else { %>\n        <section class=\"message\">\n        <% prev = msg.user.id %>\n    <% } %>\n<% } %>\n    <h1 id=\"username\"> <%= msg.user.username %> </h1>\n    <p id=\"msg\"> <%= msg.msg %> </p>\n</section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<!-- Messages sent by current user have an additional class -->\n<!-- For testing purposes, assume current user is user3-->\n")
    ; __line = 3
    ;  if (msg.user.id === 'user3') { 
    ; __append("\n    ")
    ; __line = 4
    ;  if (msg.user.id === prev) { 
    ; __append(" \n        <section class=\"message stream mine\">\n    ")
    ; __line = 6
    ;  } else { 
    ; __append("\n        <section class=\"message mine\">\n        ")
    ; __line = 8
    ;  prev = msg.user.id 
    ; __append("\n    ")
    ; __line = 9
    ;  } 
    ; __append("\n")
    ; __line = 10
    ;  } else { 
    ; __append("\n    ")
    ; __line = 11
    ;  if (msg.user.id === prev) { 
    ; __append(" \n        <section class=\"message stream\">\n    ")
    ; __line = 13
    ;  } else { 
    ; __append("\n        <section class=\"message\">\n        ")
    ; __line = 15
    ;  prev = msg.user.id 
    ; __append("\n    ")
    ; __line = 16
    ;  } 
    ; __append("\n")
    ; __line = 17
    ;  } 
    ; __append("\n    <h1 id=\"username\"> ")
    ; __line = 18
    ; __append(escapeFn( msg.user.username ))
    ; __append(" </h1>\n    <p id=\"msg\"> ")
    ; __line = 19
    ; __append(escapeFn( msg.msg ))
    ; __append(" </p>\n</section>")
    ; __line = 20
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_index = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<!-- Uncomment (one at a time!) to test different main views-->\n<!-- TODO add dashboard here -->\n\n<section id=\"friendlist\">\n\n  <section class=\"page\" id=\"your_friends\">\n    <h1>Your friends</h1>\n    <ul>\n      <% friends.forEach( friend=> { %>\n        <li class=\"friend\">\n          <section class=\"shadow\" id=\"info\">\n            <div id=\"avatar\"></div>\n            <h1 id=\"name\">\n              <%= friend.name %>\n            </h1>\n            <p>Lorem ipsum dolor sit amet.</p>\n          </section>\n          <div id=\"buttons\">\n            <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n            <button class=\"grow_hover\" id=\"message\">Message</button>\n            <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n          </div>\n        </li>\n\n        <% }); %>\n    </ul>\n  </section>\n\n  <section id=\"bookmarks\">\n    <% for(let i=0; i < 9; i++) { %>\n      <% let style='grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' %>\n        <div style=\"<%= style %>\" id=\"bm<%=i%>\" class=\"bookmark\"></div>\n        <% }; %>\n  </section>\n\n</section>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<!-- Uncomment (one at a time!) to test different main views-->\n<!-- TODO add dashboard here -->\n\n<section id=\"friendlist\">\n\n  <section class=\"page\" id=\"your_friends\">\n    <h1>Your friends</h1>\n    <ul>\n      ")
    ; __line = 9
    ;  friends.forEach( friend=> { 
    ; __append("\n        <li class=\"friend\">\n          <section class=\"shadow\" id=\"info\">\n            <div id=\"avatar\"></div>\n            <h1 id=\"name\">\n              ")
    ; __line = 14
    ; __append(escapeFn( friend.name ))
    ; __append("\n            </h1>\n            <p>Lorem ipsum dolor sit amet.</p>\n          </section>\n          <div id=\"buttons\">\n            <button class=\"grow_hover\" id=\"profile\">See Profile</button>\n            <button class=\"grow_hover\" id=\"message\">Message</button>\n            <button class=\"grow_hover\" id=\"unfriend\">Unfriend</button>\n          </div>\n        </li>\n\n        ")
    ; __line = 25
    ;  }); 
    ; __append("\n    </ul>\n  </section>\n\n  <section id=\"bookmarks\">\n    ")
    ; __line = 30
    ;  for(let i=0; i < 9; i++) { 
    ; __append("\n      ")
    ; __line = 31
    ;  let style='grid-area: ' + (1 + 2*i) + ' / 1 / ' + (4 + 2*i) + ' / 2' 
    ; __append("\n        <div style=\"")
    ; __line = 32
    ; __append(escapeFn( style ))
    ; __append("\" id=\"bm")
    ; __append(escapeFn(i))
    ; __append("\" class=\"bookmark\"></div>\n        ")
    ; __line = 33
    ;  }; 
    ; __append("\n  </section>\n\n</section>\n")
    ; __line = 37
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_login = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<div class=\"form-container\">\n\n    <section id=\"title\">\n        <h1>Welcome back!</h1>\n        <h2>Log in to your account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" id=\"loginForm\" action=\"/login\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n        <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Don't have an account yet?</h3>\n        <form method=\"GET\" id=\"signupRedirect\" action=\"/signup\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n        </form>\n    </section>\n\n</div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<div class=\"form-container\">\n\n    <section id=\"title\">\n        <h1>Welcome back!</h1>\n        <h2>Log in to your account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" id=\"loginForm\" action=\"/login\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n        <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Don't have an account yet?</h3>\n        <form method=\"GET\" id=\"signupRedirect\" action=\"/signup\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n        </form>\n    </section>\n\n</div>")
    ; __line = 27
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_profile = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<div id=\"profile_container\">\n    <div id=\"profile\">\n        <h1>Your Profile</h1>\n\n        <div id=\"top_section\">\n\n            <section id=\"user_info_area\">\n\n                <div id=\"pic_and_username\">\n                    <img id=\"ppic\" src=\"<%= user.ppic %>\">\n                    <h1><%= user.username %></h1>\n                </div>\n\n                <div id=\"info\">\n                    <div id=\"name\">\n                        <div>\n                            <h2>Name:</h2>\n                            <p><%=user.name%></p>\n                        </div>\n                        <div>\n                            <h2>Surname:</h2>\n                            <p><%=user.surname%></p>\n                        </div>\n                    </div>\n                    <div id=\"email\">\n                        <h2>Email:</h2>\n                        <p><%=user.email%></p>\n                    </div>\n                </div>\n                \n                <div id=\"bio\">\n                    <p><%= user.bio %></p>\n                </div>\n\n                <button class=\"button\" type=\"button\" id=\"settings\" name=\"settings\"> Settings </button>\n\n            </section>\n\n            <section id=\"data\">\n                <section class=\"profile_data\" id=\"tracking\">\n                    <h1>Tracking</h1>\n                    <ul class=\"tracking_list\">\n                        <% if (user.tracking.length == 0) { %>\n                            <div class=\"no_collections\">It appears you don't have any</div>\n                        <% } else { %>\n                            <% for(let i = 0; i < 3; i++) { %>\n                                <% if (user.tracking[i] != undefined) { %>\n                                    <% let col = user.tracking[i] %>\n                                    <li>\n                                        <img src=\"<%=col.img%>\" alt=\"<%=col.name%>\">\n                                        <h4 class=\"name\"><%=col.name%></h4>\n                                    </li>\n                                <% } %>\n                            <% }; %>\n                        <% }; %>\n                    </ul>\n                    <% if (user.tracking.length > 0) { %>\n                        <button class=\"button\" >See More</button>\n                    <% } %>\n                </section>\n                <section class=\"profile_data\" id=\"recentlyviewed\">\n                    <h1>Recently Viewed</h1>\n                    <ul class=\"tracking_list\">\n                        <% if (user.recentlyviewed.length == 0) { %>\n                            <div class=\"no_collections\">It appears you don't have any</div>\n                        <% } else { %>\n                            <% for(let i = 0; i < 3; i++) { %>\n                                <% if (user.recentlyviewed[i] != undefined) { %>\n                                    <% let col = user.recentlyviewed[i] %>\n                                    <li>\n                                        <img src=\"<%=col.img%>\" alt=\"<%=col.name%>\">\n                                        <h4 class=\"name\"><%=col.name%></h4>\n                                    </li>\n                                <% } %>\n                            <% }; %>\n                        <% }; %>\n                    </ul>\n                </section>\n            </section>\n\n        </div>\n        \n        <section id=\"friends\">\n            <section id=\"friends_list\">\n                <h3>Your Friends</h3>\n                <ul class=\"list\">\n                    <% if (user.friendlist.length == 0) { %>\n                        <div class=\"no_friends\">It appears you don't have any</div>\n                    <% } else { %>\n                        <% for(let i = 0; i < 3; i++) { %>\n                            <% if (user.friendlist[i] != undefined) { %>\n                                <% let friend = user.friendlist[i] %>\n                                <li class=\"friend\">\n                                    <img src=\"<%=friend.ppic%>\" alt=\"<%=friend.username%>\">\n                                    <h4 class=\"name\"><%=friend.username%></h4>\n                                </li>\n                            <% } %>\n                        <% }; %>\n                    <% }; %>\n                </ul>\n                <% if (user.friendlist.length > 0) { %>\n                    <button class=\"button\" >See More</button>\n                <% } %>\n            </section>\n            <section id=\"friendrequests\">\n                <h3>Friend Requests</h3>\n                <ul class=\"list\">\n                    <% if (user.friendrequests.length == 0) { %>\n                        <div class=\"no_friends\">It appears you don't have any</div>\n                    <% } else { %>\n                        <% for(let i = 0; i < 3; i++) { %>\n                            <% if (user.friendrequests[i] != undefined) { %>\n                                <% let friend = user.friendrequests[i] %>\n                                <li class=\"friend\">\n                                    <img src=\"<%=friend.ppic%>\" alt=\"<%=friend.username%>\">\n                                    <h4 class=\"name\"><%=friend.username%></h4>\n                                </li>\n                            <% } %>\n                        <% }; %>\n                    <% }; %>\n                </ul>\n                <% if (user.friendrequests.length > 0) { %>\n                    <button class=\"button\" >See More</button>\n                <% } %>\n            </section>\n            <section id=\"blocked\">\n                <h3>Blocked Users</h3>\n                <ul class=\"list\">\n                    <% if (user.blocked.length == 0) { %>\n                        <div class=\"no_friends\">It appears you don't have any</div>\n                    <% } else { %>\n                        <% for(let i = 0; i < 3; i++) { %>\n                            <% if (user.blocked[i] != undefined) { %>\n                                <% let friend = user.blocked[i] %>\n                                <li class=\"friend\">\n                                    <img src=\"<%=friend.ppic%>\" alt=\"<%=friend.username%>\">\n                                    <h4 class=\"name\"><%=friend.username%></h4>\n                                </li>\n                            <% } %>\n                        <% }; %>\n                    <% }; %>\n                </ul>\n                <% if (user.blocked.length > 0) { %>\n                    <button class=\"button\" >See More</button>\n                <% } %>\n            </section>\n        </section>\n\n    </div>\n</div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<div id=\"profile_container\">\n    <div id=\"profile\">\n        <h1>Your Profile</h1>\n\n        <div id=\"top_section\">\n\n            <section id=\"user_info_area\">\n\n                <div id=\"pic_and_username\">\n                    <img id=\"ppic\" src=\"")
    ; __line = 10
    ; __append(escapeFn( user.ppic ))
    ; __append("\">\n                    <h1>")
    ; __line = 11
    ; __append(escapeFn( user.username ))
    ; __append("</h1>\n                </div>\n\n                <div id=\"info\">\n                    <div id=\"name\">\n                        <div>\n                            <h2>Name:</h2>\n                            <p>")
    ; __line = 18
    ; __append(escapeFn(user.name))
    ; __append("</p>\n                        </div>\n                        <div>\n                            <h2>Surname:</h2>\n                            <p>")
    ; __line = 22
    ; __append(escapeFn(user.surname))
    ; __append("</p>\n                        </div>\n                    </div>\n                    <div id=\"email\">\n                        <h2>Email:</h2>\n                        <p>")
    ; __line = 27
    ; __append(escapeFn(user.email))
    ; __append("</p>\n                    </div>\n                </div>\n                \n                <div id=\"bio\">\n                    <p>")
    ; __line = 32
    ; __append(escapeFn( user.bio ))
    ; __append("</p>\n                </div>\n\n                <button class=\"button\" type=\"button\" id=\"settings\" name=\"settings\"> Settings </button>\n\n            </section>\n\n            <section id=\"data\">\n                <section class=\"profile_data\" id=\"tracking\">\n                    <h1>Tracking</h1>\n                    <ul class=\"tracking_list\">\n                        ")
    ; __line = 43
    ;  if (user.tracking.length == 0) { 
    ; __append("\n                            <div class=\"no_collections\">It appears you don't have any</div>\n                        ")
    ; __line = 45
    ;  } else { 
    ; __append("\n                            ")
    ; __line = 46
    ;  for(let i = 0; i < 3; i++) { 
    ; __append("\n                                ")
    ; __line = 47
    ;  if (user.tracking[i] != undefined) { 
    ; __append("\n                                    ")
    ; __line = 48
    ;  let col = user.tracking[i] 
    ; __append("\n                                    <li>\n                                        <img src=\"")
    ; __line = 50
    ; __append(escapeFn(col.img))
    ; __append("\" alt=\"")
    ; __append(escapeFn(col.name))
    ; __append("\">\n                                        <h4 class=\"name\">")
    ; __line = 51
    ; __append(escapeFn(col.name))
    ; __append("</h4>\n                                    </li>\n                                ")
    ; __line = 53
    ;  } 
    ; __append("\n                            ")
    ; __line = 54
    ;  }; 
    ; __append("\n                        ")
    ; __line = 55
    ;  }; 
    ; __append("\n                    </ul>\n                    ")
    ; __line = 57
    ;  if (user.tracking.length > 0) { 
    ; __append("\n                        <button class=\"button\" >See More</button>\n                    ")
    ; __line = 59
    ;  } 
    ; __append("\n                </section>\n                <section class=\"profile_data\" id=\"recentlyviewed\">\n                    <h1>Recently Viewed</h1>\n                    <ul class=\"tracking_list\">\n                        ")
    ; __line = 64
    ;  if (user.recentlyviewed.length == 0) { 
    ; __append("\n                            <div class=\"no_collections\">It appears you don't have any</div>\n                        ")
    ; __line = 66
    ;  } else { 
    ; __append("\n                            ")
    ; __line = 67
    ;  for(let i = 0; i < 3; i++) { 
    ; __append("\n                                ")
    ; __line = 68
    ;  if (user.recentlyviewed[i] != undefined) { 
    ; __append("\n                                    ")
    ; __line = 69
    ;  let col = user.recentlyviewed[i] 
    ; __append("\n                                    <li>\n                                        <img src=\"")
    ; __line = 71
    ; __append(escapeFn(col.img))
    ; __append("\" alt=\"")
    ; __append(escapeFn(col.name))
    ; __append("\">\n                                        <h4 class=\"name\">")
    ; __line = 72
    ; __append(escapeFn(col.name))
    ; __append("</h4>\n                                    </li>\n                                ")
    ; __line = 74
    ;  } 
    ; __append("\n                            ")
    ; __line = 75
    ;  }; 
    ; __append("\n                        ")
    ; __line = 76
    ;  }; 
    ; __append("\n                    </ul>\n                </section>\n            </section>\n\n        </div>\n        \n        <section id=\"friends\">\n            <section id=\"friends_list\">\n                <h3>Your Friends</h3>\n                <ul class=\"list\">\n                    ")
    ; __line = 87
    ;  if (user.friendlist.length == 0) { 
    ; __append("\n                        <div class=\"no_friends\">It appears you don't have any</div>\n                    ")
    ; __line = 89
    ;  } else { 
    ; __append("\n                        ")
    ; __line = 90
    ;  for(let i = 0; i < 3; i++) { 
    ; __append("\n                            ")
    ; __line = 91
    ;  if (user.friendlist[i] != undefined) { 
    ; __append("\n                                ")
    ; __line = 92
    ;  let friend = user.friendlist[i] 
    ; __append("\n                                <li class=\"friend\">\n                                    <img src=\"")
    ; __line = 94
    ; __append(escapeFn(friend.ppic))
    ; __append("\" alt=\"")
    ; __append(escapeFn(friend.username))
    ; __append("\">\n                                    <h4 class=\"name\">")
    ; __line = 95
    ; __append(escapeFn(friend.username))
    ; __append("</h4>\n                                </li>\n                            ")
    ; __line = 97
    ;  } 
    ; __append("\n                        ")
    ; __line = 98
    ;  }; 
    ; __append("\n                    ")
    ; __line = 99
    ;  }; 
    ; __append("\n                </ul>\n                ")
    ; __line = 101
    ;  if (user.friendlist.length > 0) { 
    ; __append("\n                    <button class=\"button\" >See More</button>\n                ")
    ; __line = 103
    ;  } 
    ; __append("\n            </section>\n            <section id=\"friendrequests\">\n                <h3>Friend Requests</h3>\n                <ul class=\"list\">\n                    ")
    ; __line = 108
    ;  if (user.friendrequests.length == 0) { 
    ; __append("\n                        <div class=\"no_friends\">It appears you don't have any</div>\n                    ")
    ; __line = 110
    ;  } else { 
    ; __append("\n                        ")
    ; __line = 111
    ;  for(let i = 0; i < 3; i++) { 
    ; __append("\n                            ")
    ; __line = 112
    ;  if (user.friendrequests[i] != undefined) { 
    ; __append("\n                                ")
    ; __line = 113
    ;  let friend = user.friendrequests[i] 
    ; __append("\n                                <li class=\"friend\">\n                                    <img src=\"")
    ; __line = 115
    ; __append(escapeFn(friend.ppic))
    ; __append("\" alt=\"")
    ; __append(escapeFn(friend.username))
    ; __append("\">\n                                    <h4 class=\"name\">")
    ; __line = 116
    ; __append(escapeFn(friend.username))
    ; __append("</h4>\n                                </li>\n                            ")
    ; __line = 118
    ;  } 
    ; __append("\n                        ")
    ; __line = 119
    ;  }; 
    ; __append("\n                    ")
    ; __line = 120
    ;  }; 
    ; __append("\n                </ul>\n                ")
    ; __line = 122
    ;  if (user.friendrequests.length > 0) { 
    ; __append("\n                    <button class=\"button\" >See More</button>\n                ")
    ; __line = 124
    ;  } 
    ; __append("\n            </section>\n            <section id=\"blocked\">\n                <h3>Blocked Users</h3>\n                <ul class=\"list\">\n                    ")
    ; __line = 129
    ;  if (user.blocked.length == 0) { 
    ; __append("\n                        <div class=\"no_friends\">It appears you don't have any</div>\n                    ")
    ; __line = 131
    ;  } else { 
    ; __append("\n                        ")
    ; __line = 132
    ;  for(let i = 0; i < 3; i++) { 
    ; __append("\n                            ")
    ; __line = 133
    ;  if (user.blocked[i] != undefined) { 
    ; __append("\n                                ")
    ; __line = 134
    ;  let friend = user.blocked[i] 
    ; __append("\n                                <li class=\"friend\">\n                                    <img src=\"")
    ; __line = 136
    ; __append(escapeFn(friend.ppic))
    ; __append("\" alt=\"")
    ; __append(escapeFn(friend.username))
    ; __append("\">\n                                    <h4 class=\"name\">")
    ; __line = 137
    ; __append(escapeFn(friend.username))
    ; __append("</h4>\n                                </li>\n                            ")
    ; __line = 139
    ;  } 
    ; __append("\n                        ")
    ; __line = 140
    ;  }; 
    ; __append("\n                    ")
    ; __line = 141
    ;  }; 
    ; __append("\n                </ul>\n                ")
    ; __line = 143
    ;  if (user.blocked.length > 0) { 
    ; __append("\n                    <button class=\"button\" >See More</button>\n                ")
    ; __line = 145
    ;  } 
    ; __append("\n            </section>\n        </section>\n\n    </div>\n</div>")
    ; __line = 150
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_rooms = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section id=\"rooms\">\n\n    <!-- pubblic rooms -->\n    <article class=\"rooms_section\" id=\"general\">\n      <h1>Chat Rooms</h1>\n      <ul class=\"discover_lineup\">\n            <!-- Used place holders -->\n            <% let rooms = [{\"title\": \"Chat 1\" , \"img\" : \"/images/chat.png\" }, {\"title\": \"Chat 2\" , \"img\" : \"/images/chat.png\" }, {\"title\": \"Chat 3\" , \"img\" : \"/images/chat.png\" }] %>\n            <% rooms.forEach( item => { %>\n                <li class=\"discover_item grow_hover shadow\"><a href=\"/item/info\">\n                    <img src=\"<%= item.img %>\" alt=\"<%= item.title %>\">\n                    <h1><%= item.title %></h1>\n                </a></li>\n            <% }) %>\n  \n      </ul>\n    </article>\n\n    <!-- private rooms -->\n    <article class=\"private_rooms_section\" id=\"general\">\n        <h1>Chat Rooms</h1>\n        <ul class=\"discover_lineup\">\n              <!-- Used place holders -->\n              <% rooms.forEach( item => { %>\n                  <li class=\"discover_item grow_hover shadow\"><a href=\"/item/info\">\n                      <img src=\"<%= item.img %>\" alt=\"<%= item.title %>\">\n                      <h1><%= item.title %></h1>\n                  </a></li>\n              <% }) %>\n    \n        </ul>\n      </article>\n    \n    <!-- too see the invites to join privates rooms -->\n    <section class=\"invites\">\n        <button id=\"accept_invite\">accept invite</button>\n    <section>\n  \n  </section>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section id=\"rooms\">\n\n    <!-- pubblic rooms -->\n    <article class=\"rooms_section\" id=\"general\">\n      <h1>Chat Rooms</h1>\n      <ul class=\"discover_lineup\">\n            <!-- Used place holders -->\n            ")
    ; __line = 8
    ;  let rooms = [{"title": "Chat 1" , "img" : "/images/chat.png" }, {"title": "Chat 2" , "img" : "/images/chat.png" }, {"title": "Chat 3" , "img" : "/images/chat.png" }] 
    ; __append("\n            ")
    ; __line = 9
    ;  rooms.forEach( item => { 
    ; __append("\n                <li class=\"discover_item grow_hover shadow\"><a href=\"/item/info\">\n                    <img src=\"")
    ; __line = 11
    ; __append(escapeFn( item.img ))
    ; __append("\" alt=\"")
    ; __append(escapeFn( item.title ))
    ; __append("\">\n                    <h1>")
    ; __line = 12
    ; __append(escapeFn( item.title ))
    ; __append("</h1>\n                </a></li>\n            ")
    ; __line = 14
    ;  }) 
    ; __append("\n  \n      </ul>\n    </article>\n\n    <!-- private rooms -->\n    <article class=\"private_rooms_section\" id=\"general\">\n        <h1>Chat Rooms</h1>\n        <ul class=\"discover_lineup\">\n              <!-- Used place holders -->\n              ")
    ; __line = 24
    ;  rooms.forEach( item => { 
    ; __append("\n                  <li class=\"discover_item grow_hover shadow\"><a href=\"/item/info\">\n                      <img src=\"")
    ; __line = 26
    ; __append(escapeFn( item.img ))
    ; __append("\" alt=\"")
    ; __append(escapeFn( item.title ))
    ; __append("\">\n                      <h1>")
    ; __line = 27
    ; __append(escapeFn( item.title ))
    ; __append("</h1>\n                  </a></li>\n              ")
    ; __line = 29
    ;  }) 
    ; __append("\n    \n        </ul>\n      </article>\n    \n    <!-- too see the invites to join privates rooms -->\n    <section class=\"invites\">\n        <button id=\"accept_invite\">accept invite</button>\n    <section>\n  \n  </section>")
    ; __line = 39
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_settings = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<div id=\"settings_container\">\n\n    <div id=\"settings\">\n\n        <h1>Edit Your Profile</h1>\n\n        <section class=\"settings_section\" id=\"profile_picture\">\n            <img id=\"picture\" src=\"images/user1.png\" alt=\"profile\">\n            <form method=\"POST\" action=\"/user/settings/<%= result._id %>?req=ppic\" enctype=\"multipart/form-data\">\n                <div>\n                    <label for=\"upload\">\n                        <h3>Choose an image to upload</h3>\n                        <input type=\"file\" id=\"file\" name=\"profile_picture\" accept=\"image/*\">\n                    </label>\n                    <button class=\"button\" type=\"button\" id=\"regenerate_image\" name=\"regenerate_image\"> Regenerate Image\n                    </button>\n                </div>\n\n                <input class=\"button\" type=\"submit\" value=\"Change profile picture\">\n            </form>\n        </section>\n\n        <section class=\"settings_section\" id=\"user_info\">\n\n            <h2 class=\"title\">Modify your profile information</h1>\n\n                <div>\n                    <form method=\"POST\" action=\"/user/settings/<%= result._id %>?req=email&_method=PUT\"\n                        enctype=\"multipart/form-data\">\n                        <label for=\"email\">\n                            <h3>Email address</h3>\n                            <input type=\"text\" name=\"email\" value=<%= result.email %> required>\n                            <input class=\"button\" type=\"submit\" value=\"Change email\">\n                        </label>\n                    </form>\n\n                    <form method=\"POST\" action=\"/user/settings/<%= result._id %>?req=bio&_method=PUT\" enctype=\"multipart/form-data\">\n                        <label for=\"bio\">\n                            <h3>Biography</h3>\n                            <input type=\"text\" name=\"bio\" value=\"<%= result.bio %>\">\n                            <input class=\"button\" type=\"submit\" value=\"Change bio\">\n                        </label>\n                    </form>\n                </div>\n\n\n        </section>\n\n        <!-- <form method=\"POST\" action=\"/user/settings/<%= result._id %>?req=email&_method=PUT\"\n            enctype=\"multipart/form-data\">\n            <label for=\"email\">Change email:</label>\n            <input type=\"email\" name=\"email\" required value=<%=result.email %>>\n\n            <h2 class=\"title\">Modify your password</h2>\n        </form> -->\n\n        <!-- <form method=\"POST\" action=\"/user/settings/<%= result._id %>?req=bio&_method=PUT\" enctype=\"multipart/form-data\">\n            <label for=\"bio\">Change bio:</label>\n            <input type=\"text\" name=\"bio\" value=<%=result.bio %>>\n\n            <label for=\"old_password\">\n                <h3>Old Password</h3>\n                <input type=\"text\" name=\"old_password\" required>\n            </label>\n\n            <label for=\"new_password\">\n                <h3>New Password</h3>\n                <input type=\"password\" name=\"new_password\" required>\n            </label>\n\n            <label for=\"confirm_new_password\">\n                <h3>Confirm New Password</h3>\n                <input type=\"password\" name=\"confirm_new_password\" required>\n            </label>\n\n            <input class=\"button\" type=\"submit\" value=\"Change password\">\n        </form> -->\n\n        <!-- <form method=\"POST\" action=\"/user/settings/<%= result._id %>?req=ppic&_method=PUT\"\n            enctype=\"multipart/form-data\">\n            <label for=\"upload\">Choose an image to upload:</label>\n            <input type=\"file\" id=\"file\" name=\"profile_picture\" accept=\"image/*\">\n            <button type=\"button\" id=\"regenerate_image\" name=\"regenerate_image\"> Regenerate Image </button>\n            <input type=\"submit\" value=\"Change profile picture\">\n        </form> -->\n    </div>\n</div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<div id=\"settings_container\">\n\n    <div id=\"settings\">\n\n        <h1>Edit Your Profile</h1>\n\n        <section class=\"settings_section\" id=\"profile_picture\">\n            <img id=\"picture\" src=\"images/user1.png\" alt=\"profile\">\n            <form method=\"POST\" action=\"/user/settings/")
    ; __line = 9
    ; __append(escapeFn( result._id ))
    ; __append("?req=ppic\" enctype=\"multipart/form-data\">\n                <div>\n                    <label for=\"upload\">\n                        <h3>Choose an image to upload</h3>\n                        <input type=\"file\" id=\"file\" name=\"profile_picture\" accept=\"image/*\">\n                    </label>\n                    <button class=\"button\" type=\"button\" id=\"regenerate_image\" name=\"regenerate_image\"> Regenerate Image\n                    </button>\n                </div>\n\n                <input class=\"button\" type=\"submit\" value=\"Change profile picture\">\n            </form>\n        </section>\n\n        <section class=\"settings_section\" id=\"user_info\">\n\n            <h2 class=\"title\">Modify your profile information</h1>\n\n                <div>\n                    <form method=\"POST\" action=\"/user/settings/")
    ; __line = 28
    ; __append(escapeFn( result._id ))
    ; __append("?req=email&_method=PUT\"\n                        enctype=\"multipart/form-data\">\n                        <label for=\"email\">\n                            <h3>Email address</h3>\n                            <input type=\"text\" name=\"email\" value=")
    ; __line = 32
    ; __append(escapeFn( result.email ))
    ; __append(" required>\n                            <input class=\"button\" type=\"submit\" value=\"Change email\">\n                        </label>\n                    </form>\n\n                    <form method=\"POST\" action=\"/user/settings/")
    ; __line = 37
    ; __append(escapeFn( result._id ))
    ; __append("?req=bio&_method=PUT\" enctype=\"multipart/form-data\">\n                        <label for=\"bio\">\n                            <h3>Biography</h3>\n                            <input type=\"text\" name=\"bio\" value=\"")
    ; __line = 40
    ; __append(escapeFn( result.bio ))
    ; __append("\">\n                            <input class=\"button\" type=\"submit\" value=\"Change bio\">\n                        </label>\n                    </form>\n                </div>\n\n\n        </section>\n\n        <!-- <form method=\"POST\" action=\"/user/settings/")
    ; __line = 49
    ; __append(escapeFn( result._id ))
    ; __append("?req=email&_method=PUT\"\n            enctype=\"multipart/form-data\">\n            <label for=\"email\">Change email:</label>\n            <input type=\"email\" name=\"email\" required value=")
    ; __line = 52
    ; __append(escapeFn(result.email ))
    ; __append(">\n\n            <h2 class=\"title\">Modify your password</h2>\n        </form> -->\n\n        <!-- <form method=\"POST\" action=\"/user/settings/")
    ; __line = 57
    ; __append(escapeFn( result._id ))
    ; __append("?req=bio&_method=PUT\" enctype=\"multipart/form-data\">\n            <label for=\"bio\">Change bio:</label>\n            <input type=\"text\" name=\"bio\" value=")
    ; __line = 59
    ; __append(escapeFn(result.bio ))
    ; __append(">\n\n            <label for=\"old_password\">\n                <h3>Old Password</h3>\n                <input type=\"text\" name=\"old_password\" required>\n            </label>\n\n            <label for=\"new_password\">\n                <h3>New Password</h3>\n                <input type=\"password\" name=\"new_password\" required>\n            </label>\n\n            <label for=\"confirm_new_password\">\n                <h3>Confirm New Password</h3>\n                <input type=\"password\" name=\"confirm_new_password\" required>\n            </label>\n\n            <input class=\"button\" type=\"submit\" value=\"Change password\">\n        </form> -->\n\n        <!-- <form method=\"POST\" action=\"/user/settings/")
    ; __line = 79
    ; __append(escapeFn( result._id ))
    ; __append("?req=ppic&_method=PUT\"\n            enctype=\"multipart/form-data\">\n            <label for=\"upload\">Choose an image to upload:</label>\n            <input type=\"file\" id=\"file\" name=\"profile_picture\" accept=\"image/*\">\n            <button type=\"button\" id=\"regenerate_image\" name=\"regenerate_image\"> Regenerate Image </button>\n            <input type=\"submit\" value=\"Change profile picture\">\n        </form> -->\n    </div>\n</div>")
    ; __line = 87
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_signup = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<div class=\"form-container\" id=\"signup\">\n\n    <section id=\"title\">\n        <h1>Sign up</h1>\n        <h2>Create a new account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" action=\"/signup\" id=\"signupForm\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n\n        <label for=\"name\">\n            <h3>Name</h3>\n            <input type=\"text\" name=\"name\" required>\n        </label>\n\n        <label for=\"surname\">\n            <h3>Surname</h3>\n            <input type=\"text\" name=\"surname\" required>\n        </label>\n\n        <label for=\"email\">\n            <h3>Email</h3>\n            <input type=\"email\" name=\"email\" required>\n        </label>\n\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n\n        <label for=\"retype_password\">\n            <h3>Retype Password</h3>\n            <input type=\"password\" name=\"retype_password\" required>\n        </label>\n\n        <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Already have an account?</h3>\n        <form method=\"GET\" id=\"loginRedirect\" action=\"/login\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n        </form>\n    </section>\n\n</div>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<div class=\"form-container\" id=\"signup\">\n\n    <section id=\"title\">\n        <h1>Sign up</h1>\n        <h2>Create a new account to continue to S.A.N.D</h2>\n    </section>\n\n    <form method=\"POST\" action=\"/signup\" id=\"signupForm\" enctype=\"multipart/form-data\">\n        <label for=\"username\">\n            <h3>Username</h3>\n            <input type=\"text\" name=\"username\" required>\n        </label>\n\n        <label for=\"name\">\n            <h3>Name</h3>\n            <input type=\"text\" name=\"name\" required>\n        </label>\n\n        <label for=\"surname\">\n            <h3>Surname</h3>\n            <input type=\"text\" name=\"surname\" required>\n        </label>\n\n        <label for=\"email\">\n            <h3>Email</h3>\n            <input type=\"email\" name=\"email\" required>\n        </label>\n\n        <label for=\"password\">\n            <h3>Password</h3>\n            <input type=\"password\" name=\"password\" required>\n        </label>\n\n        <label for=\"retype_password\">\n            <h3>Retype Password</h3>\n            <input type=\"password\" name=\"retype_password\" required>\n        </label>\n\n        <input class=\"grow_hover\" type=\"submit\" value=\"Sign up\">\n    </form>\n\n    <section id=\"alternative\">\n        <h3>Already have an account?</h3>\n        <form method=\"GET\" id=\"loginRedirect\" action=\"/login\">\n            <input class=\"grow_hover\" type=\"submit\" value=\"Login\">\n        </form>\n    </section>\n\n</div>")
    ; __line = 49
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_single_collection = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<section class=\"single_collection\">\n    <!-- central part -->\n    <title> <%= data.title %> </title>\n    <section class=\"collection_images\">\n        <img src=\"<%= data.img %>\" id=\"collection_img\">\n        <img src=\"<%= data.banner_img %>\" id=\"collection_banner_img\">\n    </section>\n\n    <section class=\"collection_data\">\n        <p> Items: <b><%= data.num_assets %></b> </p>\n        <p> Owners: <b><%= data.num_owners %></b> </p>\n        <p> Total volume: <b><%= data.total_volume %></b> </p>\n        <p> Link to OpenSea: <a href=\"https://opensea.io/collection/<%= data.slug %>\"> <%= data.title %> </a> </p>\n    </section>\n</section>  "
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<section class=\"single_collection\">\n    <!-- central part -->\n    <title> ")
    ; __line = 3
    ; __append(escapeFn( data.title ))
    ; __append(" </title>\n    <section class=\"collection_images\">\n        <img src=\"")
    ; __line = 5
    ; __append(escapeFn( data.img ))
    ; __append("\" id=\"collection_img\">\n        <img src=\"")
    ; __line = 6
    ; __append(escapeFn( data.banner_img ))
    ; __append("\" id=\"collection_banner_img\">\n    </section>\n\n    <section class=\"collection_data\">\n        <p> Items: <b>")
    ; __line = 10
    ; __append(escapeFn( data.num_assets ))
    ; __append("</b> </p>\n        <p> Owners: <b>")
    ; __line = 11
    ; __append(escapeFn( data.num_owners ))
    ; __append("</b> </p>\n        <p> Total volume: <b>")
    ; __line = 12
    ; __append(escapeFn( data.total_volume ))
    ; __append("</b> </p>\n        <p> Link to OpenSea: <a href=\"https://opensea.io/collection/")
    ; __line = 13
    ; __append(escapeFn( data.slug ))
    ; __append("\"> ")
    ; __append(escapeFn( data.title ))
    ; __append(" </a> </p>\n    </section>\n</section>  ")
    ; __line = 15
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_single_room = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<html>\n\n<head>\n    <link href=\"stylesheets/single_room.css\" rel=\"stylesheet\" />\n    <link href=\"stylesheets/general.css\" rel=\"stylesheet\" />\n</head>\n\n<body>\n\n    <div id=\"room_container\">\n        <section class=\"room\">\n            <!-- central part -->\n            <div id=\"chat_shadow\"></div>\n            <section id=\"chat\">\n                <% let prev %>\n                <% messages.forEach(msg => { %>\n                    <% let info = {prev:prev, msg:msg} %>\n                    <%- include('includes/room_msg', info) %>\n                    <% if (msg.user.id != prev) { %>\n                        <% prev = msg.user.id %>\n                    <% } %>\n                <% }); %>\n            </section>\n        \n            <!-- below the chat messages -->\n            <section id=\"input\">\n                <button class=\"grow_hover\" id=\"leave_room\">Leave room</button>\n                <div id=\"input\">\n                    <label for=\"msg\">\n                        <input id=\"msg\" type=\"text\" name=\"msg\" value=\"\" placeholder=\"Type here your message\"/>\n                    </label>\n                    <button class=\"grow_hover\" id=\"send\">Send</button>\n                </div>\n            </section>\n        \n            <!-- member list aside -->\n            <section id=\"members\">\n                <section id=\"admins\">\n        \n                    <h2>Admins</h2>\n                    <ul class=\"member_list\">\n                        <%- include('includes/room_member', {user:author, role:'author'}) %>\n                        <%- include('includes/room_member', {user:admins[1], role:'admin'}) %>\n                    </ul>\n        \n                    <!-- TODO: Implement this version instead -->\n                    <%- /* include('room_member', {user:room.author, role:'author'}) */ %>\n                    <% /* admins.forEach( admin => { */ %>\n                        <% /* if (!room.isAuthor(admin)) { */ %>\n                            <%- /* include('room_member', {user:admin, role:'admin'}) */ %>\n                        <% /* }; */%>\n                    <% /* }); */%>\n                </section>\n                <section id=\"normal_members\">\n        \n                    <h2>Members</h2>\n                    <ul class=\"member_list\">\n                        <%- include('includes/room_member', {user:users[2], role:'user'}) %>\n                        <%- include('includes/room_member', {user:users[3], role:'user'}) %>\n                        <%- include('includes/room_member', {user:users[4], role:'user'}) %>\n                    </ul>\n        \n                    <!-- TODO: Implement this version instead -->\n                    <!-- <% users.forEach( user => { %>\n                        <% /* if (!room.isAdmin(user)) { */%>\n                            <%- /* include('room_member', {user:user, role:'user'}) */ %>\n                        <% /* }; */%>\n                    <% }); %> -->\n                </section>\n            </section>\n        </section>  \n    </div>\n    \n</body>\n\n</html>\n\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<html>\n\n<head>\n    <link href=\"stylesheets/single_room.css\" rel=\"stylesheet\" />\n    <link href=\"stylesheets/general.css\" rel=\"stylesheet\" />\n</head>\n\n<body>\n\n    <div id=\"room_container\">\n        <section class=\"room\">\n            <!-- central part -->\n            <div id=\"chat_shadow\"></div>\n            <section id=\"chat\">\n                ")
    ; __line = 15
    ;  let prev 
    ; __append("\n                ")
    ; __line = 16
    ;  messages.forEach(msg => { 
    ; __append("\n                    ")
    ; __line = 17
    ;  let info = {prev:prev, msg:msg} 
    ; __append("\n                    ")
    ; __line = 18
    ; __append( include('includes/room_msg', info) )
    ; __append("\n                    ")
    ; __line = 19
    ;  if (msg.user.id != prev) { 
    ; __append("\n                        ")
    ; __line = 20
    ;  prev = msg.user.id 
    ; __append("\n                    ")
    ; __line = 21
    ;  } 
    ; __append("\n                ")
    ; __line = 22
    ;  }); 
    ; __append("\n            </section>\n        \n            <!-- below the chat messages -->\n            <section id=\"input\">\n                <button class=\"grow_hover\" id=\"leave_room\">Leave room</button>\n                <div id=\"input\">\n                    <label for=\"msg\">\n                        <input id=\"msg\" type=\"text\" name=\"msg\" value=\"\" placeholder=\"Type here your message\"/>\n                    </label>\n                    <button class=\"grow_hover\" id=\"send\">Send</button>\n                </div>\n            </section>\n        \n            <!-- member list aside -->\n            <section id=\"members\">\n                <section id=\"admins\">\n        \n                    <h2>Admins</h2>\n                    <ul class=\"member_list\">\n                        ")
    ; __line = 42
    ; __append( include('includes/room_member', {user:author, role:'author'}) )
    ; __append("\n                        ")
    ; __line = 43
    ; __append( include('includes/room_member', {user:admins[1], role:'admin'}) )
    ; __append("\n                    </ul>\n        \n                    <!-- TODO: Implement this version instead -->\n                    ")
    ; __line = 47
    ; __append( /* include('room_member', {user:room.author, role:'author'}) */ )
    ; __append("\n                    ")
    ; __line = 48
    ;  /* admins.forEach( admin => { */ 
    ; __append("\n                        ")
    ; __line = 49
    ;  /* if (!room.isAuthor(admin)) { */ 
    ; __append("\n                            ")
    ; __line = 50
    ; __append( /* include('room_member', {user:admin, role:'admin'}) */ )
    ; __append("\n                        ")
    ; __line = 51
    ;  /* }; */
    ; __append("\n                    ")
    ; __line = 52
    ;  /* }); */
    ; __append("\n                </section>\n                <section id=\"normal_members\">\n        \n                    <h2>Members</h2>\n                    <ul class=\"member_list\">\n                        ")
    ; __line = 58
    ; __append( include('includes/room_member', {user:users[2], role:'user'}) )
    ; __append("\n                        ")
    ; __line = 59
    ; __append( include('includes/room_member', {user:users[3], role:'user'}) )
    ; __append("\n                        ")
    ; __line = 60
    ; __append( include('includes/room_member', {user:users[4], role:'user'}) )
    ; __append("\n                    </ul>\n        \n                    <!-- TODO: Implement this version instead -->\n                    <!-- ")
    ; __line = 64
    ;  users.forEach( user => { 
    ; __append("\n                        ")
    ; __line = 65
    ;  /* if (!room.isAdmin(user)) { */
    ; __append("\n                            ")
    ; __line = 66
    ; __append( /* include('room_member', {user:user, role:'user'}) */ )
    ; __append("\n                        ")
    ; __line = 67
    ;  /* }; */
    ; __append("\n                    ")
    ; __line = 68
    ;  }); 
    ; __append(" -->\n                </section>\n            </section>\n        </section>  \n    </div>\n    \n</body>\n\n</html>\n\n")
    ; __line = 78
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_user = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h2> User page placeholder </h2>\n"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h2> User page placeholder </h2>\n")
    ; __line = 2
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}

ejs.src_views_wip = function(locals, escapeFn, include = ejs.views_include(locals), rethrow
) {
rethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){
  var lines = str.split('\n');
  var start = Math.max(lineno - 3, 0);
  var end = Math.min(lines.length, lineno + 3);
  var filename = esc(flnm); // eslint-disable-line
  // Error context
  var context = lines.slice(start, end).map(function (line, i){
    var curr = i + start + 1;
    return (curr == lineno ? ' >> ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'ejs') + ':'
    + lineno + '\n'
    + context + '\n\n'
    + err.message;

  throw err;
};
escapeFn = escapeFn || function (markup) {
  return markup == undefined
    ? ''
    : String(markup)
      .replace(_MATCH_HTML, encode_char);
};
var _ENCODE_HTML_RULES = {
      "&": "&amp;"
    , "<": "&lt;"
    , ">": "&gt;"
    , '"': "&#34;"
    , "'": "&#39;"
    }
  , _MATCH_HTML = /[&<>'"]/g;
function encode_char(c) {
  return _ENCODE_HTML_RULES[c] || c;
};
;
var __line = 1
  , __lines = "<h1>Work In Progress</h1>\n<h2> Stay Tuned </h2>\n<h3> Coming Soon </h3>"
  , __filename = undefined;
try {
  var __output = [], __append = __output.push.bind(__output);
  with (locals || {}) {
    ; __append("<h1>Work In Progress</h1>\n<h2> Stay Tuned </h2>\n<h3> Coming Soon </h3>")
    ; __line = 3
  }
  return __output.join("");
} catch (e) {
  rethrow(e, __lines, __filename, __line, escapeFn);
}

}